name: Continuous Integration (Feature Branches)

on:
  push:
    branches-ignore: ['main', 'fix/*']
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - { name: "windows (msvc)", os: windows-latest, cc: "cl", cxx: "cl", ccache_variant: ccache }
          - { name: "ubuntu (gcc)", os: ubuntu-latest, cc: "gcc", cxx: "g++-13", ccache_variant: ccache }
          - { name: "macos (clang)", os: macos-latest, cc: "clang", cxx: "$(brew --prefix llvm@15)/bin/clang++", ccache_variant: ccache }

    name: ${{ matrix.config.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ccache
        if: matrix.config.ccache_variant
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.config.os }}
          variant: ${{ matrix.config.ccache_variant }}

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          echo "BUILD_TYPE=Debug" >> $GITHUB_ENV

      - name: Configure CMake
        if: ${{ !matrix.config.ccache_variant }}
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >-
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -S ${{ github.workspace }}

      - name: Configure CMake (Ccache)
        if: matrix.config.ccache_variant
        run: >-
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -D CMAKE_CXX_COMPILER_LAUNCHER=${{ matrix.config.ccache_variant }}
          -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -S ${{ github.workspace }}

      - name: Build
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ env.BUILD_TYPE }}
